
# This file was generated by the Tkinter Designer by Parth Jadhav
# https://github.com/ParthJadhav/Tkinter-Designer


from pathlib import Path

# from tkinter import *
# Explicit importsQZ to satisfy Flake8
from tkinter import *

import firebaseModule as fb
import random


OUTPUT_PATH = Path(__file__).parent
ASSETS_PATH = "assets\\frame3"


def relative_to_assets(path: str) -> Path:
    return ASSETS_PATH / Path(path)



# Create a scrollbar

def activate(self, canvas):
    self.bagImage = PhotoImage(
        file = Path(__file__).parent/"assets\\fondo2.png"
    )       
    self.canvas.create_image(-180, -1250, anchor="nw", image=self.bagImage)
    
    self.image_image_1 = PhotoImage(
        file=relative_to_assets("image_1.png"))
    self.image_1 = canvas.create_image(
        188.0,
        54.0,
        image=self.image_image_1
    )
    
    canvas.create_text(
        197.5,
        50.0,
        anchor="center",
        text="Dieta recomendada",
        fill="#FFFFFF",
        font=("Inter Extra Bold", 28 * -1)
    )
    
    userData = fb.read(self.db, "infoUsuario", self.docID)

    carnes = fb.read(self.db, "carnes")
    cereales = fb.read(self.db, "cereales")
    lacteos = fb.read(self.db, "lacteos")
    frutasverduras = fb.read(self.db, "frutasverduras")

    dieta = []
    calorias = userData["caloriasCal"]
    divisionCalorica = calorias / 2

    caloriasCarne = 0
    while caloriasCarne < divisionCalorica:
        elegida = random.choice(carnes)
        caloriasCarne += elegida["calorias"]
        dieta.append(elegida)

    caloriasResto = 0 

    while caloriasResto < divisionCalorica:
        if caloriasResto > divisionCalorica - 200:
            elegida = random.choice(frutasverduras)
            caloriasResto += elegida["calorias"]
            dieta.append(elegida)
            continue

        elegida = random.choice(random.choice([cereales, lacteos]))
        caloriasResto += elegida["calorias"]
        dieta.append(elegida)

    caloriasTotales = caloriasCarne + caloriasResto
    print(dieta)
    print(caloriasTotales)
    dietaTexto = ""

    for producto in dieta:
        dietaTexto += " ‣ " +producto["nombre"] + ":  " + str(producto["calorias"]) + " calorías. - Q." + str(producto["precio"]) + "\n"
 
    infoGen = Text(
                bd=0,
                bg="#EAECEA",
                fg="#474747",
                highlightthickness=0,
                font=("Inter Extra Bold", 13 * -1),
                width = 35,
                height = 12
            )
    infoGen.place(x = 30, y = 125)
    infoGen.insert(1.0, dietaTexto)
    infoGen["state"] = "disabled"

    canvas.create_text(
        40.0,
        131.0,
        anchor="nw",
        text="Mi Dieta",
        fill="#FFFFFF",
        font=("Inter ExtraBold", 28 * -1)
    )

    canvas.create_text(
        193.0,
        535.0,
        anchor="center",
        text="\nDefine metas alcanzables y específicas para tu dieta.\n        Evita objetivos poco realistas o demasiado\n restrictivos que sean difíciles de mantener a largo plazo.",
        fill="#474747",
        font=("Inter ExtraBold", 13 * -1)
    )
    


    canvas.create_text(
        192.5,
        399.0,
        anchor="center",
        text="CALORÍAS",
        fill="#474747",
        font=("Inter ExtraBold", 13 * -1)
    )

    canvas.create_text(
        36.0,
        423.0,
        anchor="nw",
        text="Ingesta diaria:                                             "+str(userData["caloriasCal"])+"                                       \nPara adelgazar:                                          "+str(userData["caloriasAdelgazar"])+"\nPara subir de peso:                                     "+str(userData["caloriasEngordar"]),
        fill="#474747",
        font=("Inter ExtraBold", 13 * -1)
    )

    self.image_image_2 = PhotoImage(
        file=relative_to_assets("image_2.png"))
    self.image_2 = canvas.create_image(
        187.0,
        382.0,
        image=self.image_image_2
    )

    self.image_image_3 = PhotoImage(
        file=relative_to_assets("image_3.png"))
    self.image_3 = canvas.create_image(
        187.0,
        491.0,
        image=self.image_image_3
    )

    self.image_image_4 = PhotoImage(
        file=relative_to_assets("image_4.png"))
    self.image_4 = canvas.create_image(
        48.0,
        618.0,
        image=self.image_image_4
    )

    self.image_image_5 = PhotoImage(
        file=relative_to_assets("image_5.png"))
    self.image_5 = canvas.create_image(
        188.0,
        225.0,
        image=self.image_image_5
    )

    self.image_image_6 = PhotoImage(
        file=relative_to_assets("image_6.png"))
    self.image_6 = canvas.create_image(
        188.0,
        225.0,
        image=self.image_image_6
    )

